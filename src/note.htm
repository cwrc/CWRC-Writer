<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
    <head>
        <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
        <title>CWRC-Writer</title>
        
        <link type="text/css" rel="stylesheet" href="css/style.css" />
        <link type="text/css" rel="stylesheet" href="css/layout-default-latest.css" />
        <link type="text/css" rel="stylesheet" href="css/cwrc12/jquery-ui.css" />
    </head>
    <body>
        <script type="text/javascript" src="js/app.js"></script>
        <script type="text/javascript" src="js/delegator.js"></script>
        <script type="text/javascript">
	        function getParameterByName(name, url) {
	            if (!url) url = window.location.href;
	            name = name.replace(/[\[\]]/g, "\\$&");
	            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
	                results = regex.exec(url);
	            if (!results) return null;
	            if (!results[2]) return '';
	            return decodeURIComponent(results[2].replace(/\+/g, " "));
	        }
	        
            function doInit(config) {
                var readonly = getParameterByName('readonly');
                if (readonly == 'true') {
                    config.readonly = true;
                }
                config.delegator = Delegator;
                config.mode = 'xml';
                config.buttons1 = 'schematags,editTag,removeTag,|,addperson,addplace,adddate,addorg,addcitation,addtitle,addcorrection,addkeyword,addlink';
                writer = new CWRCWriter(config);
                writer.init('cwrcWriterContainer');
            }
            
            (function() {
                var configXHR = $.ajax({url: 'js/writerConfig.js', dataType: 'json'});
                var projectXHR = $.ajax({url: 'http://apps.testing.cwrc.ca/editor/documents/info/projectname'});
                $.when(
                    configXHR,
                    projectXHR
                ).then(function(config, project) {
                    config = config[0];
                    project = project[0];
                    config.project = project;
                    config.cwrcRootUrl = window.location.protocol+'//'+window.location.host+window.location.pathname.replace(window.location.pathname.split('/').pop(),'');
                    doInit(config);
                },function(xhr) {
                    if (configXHR.state() === 'resolved') {
                        var config = $.parseJSON(configXHR.responseText);
                        config.cwrcRootUrl = window.location.protocol+'//'+window.location.host+window.location.pathname.replace(window.location.pathname.split('/').pop(),'');
                        doInit(config);
                    } else {
                        alert('Error loading writerConfig.js');
                    }
                });
            }());
        </script>
        <div id="cwrcWriterContainer" style="height: 100%; width: 100%;"></div>
    </body>
</html>